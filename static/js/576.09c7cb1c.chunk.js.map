{"version":3,"file":"static/js/576.09c7cb1c.chunk.js","mappings":"8LACA,EAAuB,qB,SCCR,SAASA,EAAT,GAAkC,IAATC,EAAQ,EAARA,KAC9BC,GAAWC,EAAAA,EAAAA,MACjB,OAAQ,eAAIC,UAAWC,EAAf,UAAwB,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaP,EAAKQ,IAArD,SAA4DR,EAAKS,UCHrG,MAAuB,qBCER,SAASC,EAAT,GAA8B,IAATV,EAAQ,EAARA,KAChC,OAAQ,eAAIG,UAAWC,EAAf,SACHJ,EAAKW,KAAI,SAAAC,GAAC,OAAI,SAACb,EAAD,CAAeC,KAAMY,GAAQA,EAAEJ,SAGtDE,EAAUG,aAAe,CACrBb,KAAM,K,mJCRV,EAAuB,qBAAvB,EAAoD,sBAApD,EAAmF,uB,SCGpE,SAASc,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACjC,GAAkBC,EAAAA,EAAAA,UAAS,IAA3B,eAAOC,EAAP,KAAUC,EAAV,KAMMC,EAAe,SAACP,GAClBA,EAAEQ,iBACFL,EAASE,IAGb,OACI,kBAAMd,UAAWC,EAAQiB,OAAO,GAAGN,SAAUI,EAA7C,WACI,kBAAOhB,UAAWC,EACdkB,MAAOL,EACPM,KAAK,QACLC,SAdS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBP,EAAKO,EAAOH,QAcJI,KAAK,UAGT,mBAAQvB,UAAWC,EAAUsB,KAAK,SAASC,QAASR,EAApD,uB,uBCxBZ,MCKe,WAAuB,IAAD,EACjC,GAA4BH,EAAAA,EAAAA,UAAS,CACjCY,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAeC,EAAf,KAKA,GAAsBC,EAAAA,EAAAA,MAAtB,eAAOC,EAAP,KAAYC,EAAZ,KACMC,EAAQF,EAAIG,IAAI,SA2BtB,OA1BAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,6FAChBP,GAAU,SAACQ,GAAD,eAAC,UAAoBA,GAArB,IAAgCX,SAAS,OADnC,kBAGWY,IAAAA,IAAA,kHAAqHL,EAArH,gCAHX,gBAGJpC,EAHI,EAGJA,KACRgC,GAAU,SAACQ,GAAD,eAAC,UACJA,GADG,IAENX,SAAS,EACTD,MAAO5B,EAAK0C,aAPJ,gDAUZV,GAAU,SAACQ,GAAD,eAAC,UACJA,GADG,IAENX,SAAS,EACTC,MAAO,KAAMa,aAbL,yDAAH,qDAiBbP,GACAG,MAEL,CAACH,KAMA,iCACI,SAACtB,EAAD,CAAYC,SALH,SAACqB,GACdD,EAAO,CAAEC,MAAAA,OAKJL,EAAOF,UAAW,uCAClB,UAAAE,EAAOH,aAAP,eAAcgB,QAAS,IAAK,SAAClC,EAAA,EAAD,CAAWV,KAAM+B,EAAOH","sources":["webpack://react-homework-template/./src/modules/MovieList/MovieListItem/styles.module.css?7ff0","modules/MovieList/MovieListItem/MovieListItem.jsx","webpack://react-homework-template/./src/modules/MovieList/styles.module.css?b6e0","modules/MovieList/MovieList.jsx","webpack://react-homework-template/./src/modules/SearchForm/styles.module.css?8ab0","modules/SearchForm/SearchForm.jsx","pages/MoviesPage/index.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"styles_item__3A3-n\"};","import { Link, useLocation } from \"react-router-dom\";\nimport s from \"./styles.module.css\"\nexport default function MovieListItem({ data }) {\n    const location = useLocation();\n    return (<li className={s.item} ><Link state={{ from: location }} to={`/movies/${data.id}`}>{data.title}</Link></li>)\n\n}       ","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"styles_list__qWq4N\"};","import MovieListItem from \"./MovieListItem/MovieListItem\"\nimport PropTypes from 'prop-types';\nimport s from \"./styles.module.css\"\nexport default function MovieList({ data }) {\n    return (<ul className={s.list}>\n        {data.map(e => <MovieListItem data={e} key={e.id} />)}\n    </ul>)\n}\nMovieList.defaultProps = {\n    data: [],\n};\nMovieList.propTypes = {\n    movie: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n    }))\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"styles_form__F6-JT\",\"input\":\"styles_input__80UGo\",\"button\":\"styles_button__WdJRs\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./styles.module.css\"\n\nexport default function SearchForm({ onSubmit }) {\n    const [q, setQ] = useState(\"\");\n\n    const handleChange = ({ target }) => {\n        setQ(target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(q);\n    };\n\n    return (\n        <form className={s.form} action=\"\" onSubmit={handleSubmit} >\n            <input className={s.input}\n                value={q}\n                name=\"query\"\n                onChange={handleChange}\n                type=\"text\"\n\n            />\n            <button className={s.button} type=\"button\" onClick={handleSubmit} >\n                Search\n            </button>\n        </form>\n    );\n};\n\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func,\n};","import MoviesPage from \"./MoviesPage\";\nexport default MoviesPage","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MovieList from \"modules/MovieList/MovieList\";\nimport SearchForm from \"modules/SearchForm/SearchForm\";\nimport axios from \"axios\";\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState({\n        items: [],\n        loading: false,\n        error: null\n    });\n    const [key, setKey] = useSearchParams();\n    const query = key.get(\"query\");\n    useEffect(() => {\n        const fetchMovies = async () => {\n            setMovies((prevState) => ({ ...prevState, loading: true }));\n            try {\n                const { data } = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=453647fe51ddb15dbe812a48a21b448b&language=en-US&query=${query}&page=1&include_adult=false`)\n                setMovies((prevState) => ({\n                    ...prevState,\n                    loading: false,\n                    items: data.results,\n                }));\n            } catch (error) {\n                setMovies((prevState) => ({\n                    ...prevState,\n                    loading: false,\n                    error: error.message,\n                }));\n            }\n        };\n        if (query) {\n            fetchMovies();\n        }\n    }, [query]);\n\n    const onSubmit = (query) => {\n        setKey({ query })\n    };\n    return (\n        <>\n            <SearchForm onSubmit={onSubmit} />\n            {movies.loading && <p>...loading</p>}\n            {movies.items?.length > 0 && <MovieList data={movies.items} />}\n        </>\n    );\n};\n\n"],"names":["MovieListItem","data","location","useLocation","className","s","state","from","to","id","title","MovieList","map","e","defaultProps","SearchForm","onSubmit","useState","q","setQ","handleSubmit","preventDefault","action","value","name","onChange","target","type","onClick","items","loading","error","movies","setMovies","useSearchParams","key","setKey","query","get","useEffect","fetchMovies","prevState","axios","results","message","length"],"sourceRoot":""}