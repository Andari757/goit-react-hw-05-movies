{"version":3,"file":"static/js/5.c8c53885.chunk.js","mappings":"6QACA,EAAsB,oBAAtB,EAAiD,qB,SCGlC,SAASA,IAAQ,IAAD,EAC3B,GAAwBC,EAAAA,EAAAA,UAAS,CAC7BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAaC,EAAb,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,sGAEVJ,GAAQ,SAACK,GAAD,eAAC,UAAoBA,GAArB,IAAgCR,SAAS,OAFvC,SAGaS,IAAAA,IAAA,6CAAgDL,EAAhD,qEAHb,gBAGFM,EAHE,EAGFA,KAERP,GAAQ,SAACK,GAAD,eAAC,UACFA,GADC,IAEJT,MAAOW,EAAKR,KACZF,SAAS,OARH,gDAWVG,GAAQ,SAACK,GAAD,eAAC,UACFA,GADC,IAEJP,MAAO,KAAMU,QACbX,SAAS,OAdH,yDAAH,qDAkBfO,MACD,CAACH,IAEJ,IAAMQ,EAAWV,EAAKH,MAAMc,KAAI,SAACC,GAAD,OAC5B,2BACI,gBAAKC,UAAWC,EAAOC,IAAM,OAADH,QAAC,IAADA,GAAAA,EAAGI,aAAe,0CAAoCJ,QAApC,IAAoCA,OAApC,EAAoCA,EAAGI,cAAe,KAAMC,IAAI,MAC9G,mBACA,0BAAOL,EAAEM,QACT,mBACA,0CAAkBN,EAAEO,UAApB,UALKP,EAAEV,OAaf,OACI,2BACKF,EAAKF,UAAW,sCAChB,UAAAE,EAAKH,aAAL,SAAYuB,QAAS,eAAIP,UAAWC,EAAf,SAAyBJ,KAAkBV,EAAKF,UAAW","sources":["webpack://react-homework-template/./src/modules/Cast/styles.module.css?228b","modules/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"styles_img__u0Jh4\",\"list\":\"styles_list__CzN6Y\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport s from \"./styles.module.css\"\nexport default function Cast() {\n    const [cast, setCast] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const { id } = useParams();\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                setCast((prevState) => ({ ...prevState, loading: true }));\n                const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=453647fe51ddb15dbe812a48a21b448b&language=en-US`)\n\n                setCast((prevState) => ({\n                    ...prevState,\n                    items: data.cast,\n                    loading: false,\n                }));\n            } catch (error) {\n                setCast((prevState) => ({\n                    ...prevState,\n                    error: error.message,\n                    loading: false,\n                }));\n            }\n        };\n        fetchCast();\n    }, [id]);\n\n    const elements = cast.items.map((e) => (\n        <li key={e.id}>\n            <img className={s.img} src={e?.profile_path ? \"https://image.tmdb.org/t/p/w500\" + e?.profile_path : null} alt=\"\" />\n            <br />\n            <span>{e.name}</span>\n            <br />\n            <span>Character: {e.character}: { }</span>\n        </li>\n\n\n    ));\n\n\n\n    return (\n        <div >\n            {cast.loading && <p>...loading</p>}\n            {cast.items?.length ? <ul className={s.list} >{elements}</ul> : !cast.loading && <span>We don't have information about cast in this film </span>}\n        </div>\n    );\n};\n\n"],"names":["Cast","useState","items","loading","error","cast","setCast","id","useParams","useEffect","fetchCast","prevState","axios","data","message","elements","map","e","className","s","src","profile_path","alt","name","character","length"],"sourceRoot":""}